{"version":3,"sources":["Contacts/ContactDelete.js","Contacts/ContactEdit.js","Contacts/ContactPagePicture.js","Contacts/ContactPage.js","Contacts/ContactAdd.js","Contacts/RandomUser.js","App.js","serviceWorker.js","index.js"],"names":["ContactDelete","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClose","setState","show","handleShow","handleDelete","dat","JSON","parse","localStorage","getItem","splice","state","index","setItem","stringify","items","undefined","react_default","a","createElement","Fragment","Button","variant","onClick","Modal","onHide","Header","closeButton","Title","onSubmit","Body","Footer","className","type","value","newProps","oldState","React","Component","ContactEdit","handleSaveEdit","event","name","first","target","last","phone","email","desc","for","defaultValue","ContactPagePicture","picture","src","alt","Cpage","Contacts_ContactPagePicture","Contacts_ContactEdit","Contacts_ContactDelete","ContactAdd","handleSave","push","large","placeholder","RandomUser","_this2","_this$props","error","isLoaded","message","console","log","map","item","key","id","click","src_Contacts_ContactAdd","App","checked","handleCheckboxChange","results","clickHandler","currentTarget","attributes","concat","fetch","then","res","json","result","sort","b","localeCompare","document","addEventListener","Contacts_RandomUser","ContactPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.234dff9c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport '../bootstrap.css';\r\n\r\nclass ContactDelete extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      index: props.index,\r\n      items: props.items,\r\n    }\r\n  }\r\n\r\n  handleClose = () => {\r\n  this.setState({\r\n    show: false\r\n  })\r\n}\r\n\r\nhandleShow = () => {\r\n  this.setState({\r\n    show: true\r\n  })\r\n}\r\n\r\nhandleDelete = () => {\r\n  const dat = JSON.parse(localStorage.getItem('items'));\r\n  dat.splice(this.state.index, 1);\r\n  localStorage.setItem('items', JSON.stringify(dat))\r\n}\r\n\r\nstatic getDerivedStateFromProps(newProps, oldState) {\r\n  if (newProps.index === oldState.index) {\r\n    return null;\r\n  }\r\n  return {\r\n    index: newProps.index,\r\n  };\r\n}\r\n\r\n  render () {\r\n    if (this.state.items[this.state.index] !== undefined) {\r\n  return (\r\n    <>\r\n      <Button variant=\"danger\" onClick={this.handleShow}>\r\n        Delete Contact\r\n      </Button>\r\n\r\n      <Modal show={this.state.show} onHide={this.handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Confirm Contact Deletion</Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={this.handleDelete}>\r\n          <Modal.Body>\r\n          Are you sure you want to delete this contact? This cannot be undone.\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleClose}>\r\n            Close\r\n          </Button>\r\n          <input className=\"btn btn-danger\" type=\"submit\" value=\"Delete Contact\" variant=\"danger\" />\r\n        </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n  );}\r\n  return null;\r\n}\r\n}\r\n\r\nexport default ContactDelete;\r\n","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport '../bootstrap.css';\r\n\r\nclass ContactEdit extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      items: this.props.items,\r\n      index: this.props.index,\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(newProps, oldState) {\r\n    if (newProps.index === oldState.index) {\r\n      return null;\r\n    }\r\n    return {\r\n      index: newProps.index,\r\n    };\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      show: false\r\n    })\r\n  }\r\n\r\n  handleShow = () => {\r\n    this.setState({\r\n      show: true\r\n    })\r\n  }\r\n\r\n  handleSaveEdit = (event) => {\r\n    const dat = JSON.parse(localStorage.getItem('items'));\r\n    dat[this.state.index].name.first = event.target[0].value;\r\n    dat[this.state.index].name.last = event.target[1].value;\r\n    dat[this.state.index].phone = event.target[2].value;\r\n    dat[this.state.index].email = event.target[3].value;\r\n    dat[this.state.index].desc = event.target[4].value;\r\n    localStorage.setItem('items', JSON.stringify(dat));}\r\n\r\n  render() {\r\n    if (this.state.items[this.state.index] !== undefined) {\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={this.handleShow}>\r\n        Edit Contact\r\n      </Button>\r\n\r\n      <Modal show={this.state.show} onHide={this.handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Contact</Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={this.handleSaveEdit}>\r\n          <Modal.Body>\r\n          <div className=\"form-group\">\r\n            <label for=\"AddFirstName\" >First Name</label>\r\n            <input type=\"text\" className=\"form-control\"  defaultValue={this.state.items[this.state.index].name.first} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"AddLastName\">Last Name</label>\r\n            <input type=\"text\" className=\"form-control\" defaultValue={this.state.items[this.state.index].name.last} />\r\n          </div>\r\n          <div>\r\n            <label for=\"AddPhone\">Phone Number</label>\r\n            <input type=\"tel\" className=\"form-control\"  defaultValue={this.state.items[this.state.index].phone}/>\r\n          </div>\r\n          <div>\r\n            <label for=\"AddEmail\">Email</label>\r\n            <input type=\"email\" className=\"form-control\" defaultValue={this.state.items[this.state.index].email} />\r\n          </div>\r\n          <div>\r\n            <label for=\"AddDesc\">Description</label>\r\n          <textarea className=\"form-control\" defaultValue={this.state.items[this.state.index].desc}/>\r\n          </div>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleClose}>\r\n            Close\r\n          </Button>\r\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Save Contact\" variant=\"primary\" />\r\n        </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n      );}\r\n      return null;\r\n  }\r\n}\r\nexport default ContactEdit;\r\n","import React from 'react';\r\n\r\nclass ContactPagePicture extends React.Component {\r\n  render(){\r\n    if (this.props.picture) {\r\n      return <img src={this.props.picture} alt={\"Portrait\"} />\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ContactPagePicture;\r\n","import React from 'react';\r\nimport './Contacts.css';\r\nimport ContactDelete from './ContactDelete';\r\nimport ContactEdit from './ContactEdit';\r\nimport ContactPagePicture from './ContactPagePicture';\r\nimport '../bootstrap.css'\r\nimport './ContactAdd.css';\r\n\r\n\r\nclass Cpage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { index: this.props.index };\r\n  }\r\n\r\n  static getDerivedStateFromProps(newProps, oldState) {\r\n    if (newProps.index === oldState.index) {\r\n      return null;\r\n    }\r\n    return {\r\n      index: newProps.index,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (this.props.items) {\r\n  return (\r\n    <div className=\"ContactPageContact\">\r\n      <div>\r\n        <ContactPagePicture picture={this.props.picture} />\r\n        <h2 className=\"ContactPageName\">{this.props.name}</h2>\r\n        <h2 className=\"ContactPagePhone\">{this.props.phone}</h2>\r\n        <h2 className=\"ContactPageEmail\">{this.props.email}</h2>\r\n        <br />\r\n        <h2 className=\"lead\">{this.props.desc}</h2>\r\n      </div>\r\n      <ContactEdit items={this.props.items} index={this.state.index} />\r\n      <ContactDelete items={this.props.items} index={this.state.index}/>\r\n    </div>\r\n);} else {\r\n  return <div></div>\r\n}}\r\n};\r\n\r\nexport default Cpage;\r\n","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport '../bootstrap.css';\r\nimport './ContactAdd.css';\r\n\r\nclass ContactAdd extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { show: false }\r\n  }\r\n\r\ncomponentDidMount() {\r\nif (localStorage.getItem('items') === null) {\r\n  this.setState({\r\n    show: true,\r\n  });\r\n}\r\n}\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      show: false\r\n    })\r\n  }\r\n\r\n  handleShow = () => {\r\n    this.setState({\r\n      show: true\r\n    })\r\n  }\r\n\r\n  handleSave = (event) => {\r\n    if (localStorage.getItem('items') === null) {\r\n      localStorage.setItem('items', '[]')\r\n    }\r\n    const dat = JSON.parse(localStorage.getItem('items'));\r\n    dat.push({\r\n      name: {\r\n        first: event.target[0].value,\r\n        last: event.target[1].value},\r\n      phone: event.target[2].value,\r\n      email: event.target[3].value,\r\n      desc: event.target[4].value,\r\n      picture: {\r\n        large: '',\r\n      }\r\n    });\r\n    localStorage.setItem('items', JSON.stringify(dat))\r\n  }\r\n\r\n  render() {\r\n  return (\r\n    <>\r\n      <Button variant=\"secondary\" onClick={this.handleShow}>\r\n        Add Contact\r\n      </Button>\r\n\r\n      <Modal show={this.state.show} onHide={this.handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Contact</Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={this.handleSave}>\r\n          <Modal.Body>\r\n          <div className=\"form-group\">\r\n            <label for=\"AddFirstName\">First Name</label>\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"John\"/>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"AddLastName\">Last Name</label>\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Doe\"/>\r\n          </div>\r\n          <div>\r\n            <label for=\"AddPhone\">Phone Number</label>\r\n            <input type=\"tel\" className=\"form-control\" placeholder=\"(555)-555-5555\"/>\r\n          </div>\r\n          <div>\r\n            <label for=\"AddEmail\">Email</label>\r\n            <input type=\"email\" className=\"form-control\" placeholder=\"john.doe@gmail.com\"/>\r\n          </div>\r\n          <div>\r\n            <label for=\"AddDesc\">Description</label>\r\n          <textarea className=\"form-control\" placeholder=\"He's a pretty good fella!\"/>\r\n          </div>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleClose}>\r\n            Close\r\n          </Button>\r\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Save Contact\" variant=\"primary\" />\r\n        </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n  );}\r\n}\r\n\r\nexport default ContactAdd;\r\n","import React from 'react';\r\nimport ContactAdd from './ContactAdd';\r\nimport '../bootstrap.css';\r\n\r\n\r\nclass RandomUser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, items } = this.props;\r\n    if (error) {\r\n      return (\r\n        <div>\r\n      Error: {error.message}\r\n      </div>\r\n);\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        console.log(items),\r\n        <div>\r\n          {items.map((item, index) => (\r\n            <div  key={index} id={index} className=\"ContactInfo\" onClick={this.props.click}>\r\n              <ul>\r\n              <li className=\"ContactName\">{item.name.first} {item.name.last} </li>\r\n              <li className=\"ContactPhone\">{item.phone}</li>\r\n              <li className=\"ContactEmail\">{item.email}</li>\r\n              </ul>\r\n            </div>)\r\n          )}\r\n          <ContactAdd />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default RandomUser;\r\n","import React, { Component } from 'react';\nimport './bootstrap.css';\nimport './App.css';\nimport ContactPage from './Contacts/ContactPage';\nimport RandomUser from './Contacts/RandomUser';\n\n\nclass App extends Component {\n\n\n  state = {\n    name: 'Add contacts to begin',\n    phone: '',\n    email: '',\n    desc: '',\n    checked: true,\n    items: JSON.parse(localStorage.getItem('items')),\n    item: JSON.parse(localStorage.getItem('items')),\n    index: 0,\n  }\n\n\n\n  componentDidMount() {\n    if (this.state.items) {\n      this.setState({\n        name: `${this.state.items[0].name.first} ${this.state.items[0].name.last}`,\n        phone: this.state.items[0].phone,\n        email: this.state.items[0].email,\n        desc: this.state.items[0].desc,\n      });\n    }\n\n    if (this.state.items) {\n      this.setState({\n        picture: this.state.items[0].picture.large,\n      })\n    }\n\n    fetch('https://randomuser.me/api/?results=100')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            results: result.results.sort((a, b) => a.name.first.localeCompare(b.name.first))\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n    if (this.state.items === null) {\n      this.setState({\n        items: [],\n        item: []\n      })\n    }\n    document.addEventListener('keydown', this.handleCheckboxChange);\n  }\n\n  handleCheckboxChange = (event) => {\n    if (event.key === 'Escape') {\n      this.setState({\n        checked: !this.state.checked,\n      });\n    }\n    if (this.state.checked === false) {\n      this.setState({\n        items: this.state.results\n      })\n    } else {\n      this.setState({\n        items: this.state.item})\n    }\n}\n\n  clickHandler = (event) => {\n    if (this.state.items[event.currentTarget.attributes.id.value].picture) {\n      this.setState({\n        picture: this.state.items[event.currentTarget.attributes.id.value].picture.large,\n      });\n    }\n    this.setState({\n      name: `${this.state.items[event.currentTarget.attributes.id.value].name.first} ${this.state.items[event.currentTarget.attributes.id.value].name.last}`,\n      phone: this.state.items[event.currentTarget.attributes.id.value].phone,\n      email: this.state.items[event.currentTarget.attributes.id.value].email,\n      desc: this.state.items[event.currentTarget.attributes.id.value].desc,\n      index: event.currentTarget.attributes.id.value,\n    })\n    console.log(this.state.index);\n    console.log(this.state.picture)\n  }\n\n\n\n  render() {\n  return (\n    <div className=\"App\">\n\n      <header className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n          <strong className=\"navbar-brand\">Contacts 'R' Us</strong>\n      </header>\n      <div className=\"wrapper\">\n        <div className=\"Contact\">\n          <RandomUser\n            error={this.state.error}\n            isLoaded={this.state.isLoaded}\n            items={this.state.items}\n            click={this.clickHandler}\n          />\n\n        </div>\n\n        <div>\n          <ContactPage\n          className=\"ContactPage\"\n            picture={this.state.picture}\n            name={this.state.name}\n            phone={this.state.phone}\n            email={this.state.email}\n            desc={this.state.desc}\n            items={this.state.items}\n            index={this.state.index}\n          />\n        </div>\n      </div>\n\n    </div>\n    );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}