{"version":3,"sources":["Contacts/ContactDelete.js","Contacts/ContactEdit.js","Contacts/ContactPagePicture.js","Contacts/ContactPage.js","Contacts/ContactAdd.js","Contacts/RandomUser.js","App.js","serviceWorker.js","index.js"],"names":["ContactDelete","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClose","setState","show","handleShow","handleDelete","dat","JSON","parse","localStorage","getItem","splice","index","setItem","stringify","state","undefined","items","react_default","a","createElement","Fragment","Button","variant","onClick","Modal","onHide","Header","closeButton","Title","onSubmit","Body","Footer","className","type","value","React","Component","ContactEdit","handleSaveEdit","event","name","first","target","last","phone","email","desc","picture","large","htmlFor","defaultValue","ContactPagePicture","style","maxHeight","src","alt","ReactMarkdown","require","Cpage","height","paddingTop","Contacts_ContactPagePicture","source","display","Contacts_ContactEdit","Contacts_ContactDelete","newProps","oldState","ContactAdd","handleSave","push","width","justifySelf","paddingBottom","placeholder","RandomUser","_this2","_this$props","error","isLoaded","message","src_Contacts_ContactAdd","map","item","key","id","click","App","handleFetch","newDat","concat","results","clickHandler","currentTarget","attributes","fetch","then","res","json","result","document","addEventListener","Contacts_RandomUser","ContactPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.47d4ab1f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport '../bootstrap.css';\r\n\r\n// Component for Delete Contact button and modal.\r\nclass ContactDelete extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n    }\r\n  }\r\n\r\n// Checks for props updates to avoid accidently deleting a previous contact.\r\n// Not a common bug, but was an issue in the past.\r\n\r\nhandleClose = () => {\r\nthis.setState({\r\n    show: false\r\n})\r\n}\r\n\r\nhandleShow = () => {\r\nthis.setState({\r\n    show: true\r\n})\r\n}\r\n\r\nhandleDelete = () => {\r\nconst dat = JSON.parse(localStorage.getItem('items'));\r\ndat.splice(this.props.index, 1);\r\nlocalStorage.setItem('items', JSON.stringify(dat))\r\n}\r\n\r\nrender() {\r\n  // Button only appears if there is a contact to delete.\r\n  if (this.props.items[this.props.index] !== undefined) {\r\n    return (\r\n      <>\r\n      <Button variant=\"danger\" onClick={this.handleShow}>\r\n        Delete\r\n      </Button>\r\n      <Modal show={this.state.show} onHide={this.handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Confirm Contact Deletion</Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={this.handleDelete}>\r\n          <Modal.Body>\r\n          Are you sure you want to delete this contact? This cannot be undone.\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleClose}>\r\n            Close\r\n          </Button>\r\n          <input className=\"btn btn-danger\" type=\"submit\" value=\"Delete\" variant=\"danger\" />\r\n        </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n}\r\n\r\nexport default ContactDelete;\r\n","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport '../bootstrap.css';\r\n\r\n// Component for the Edit Contact button and modal.\r\nclass ContactEdit extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n    }\r\n  }\r\n\r\n  // Same as ContactDelete.\r\n  // Would occasionally edit previous contact. Not a common bug, but did occur during development.\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      show: false\r\n    })\r\n  }\r\n\r\n  handleShow = () => {\r\n    this.setState({\r\n      show: true\r\n    })\r\n  }\r\n\r\n  handleSaveEdit = (event) => {\r\n    const dat = JSON.parse(localStorage.getItem('items'));\r\n    dat[this.props.index].name.first = event.target[0].value;\r\n    dat[this.props.index].name.last = event.target[1].value;\r\n    dat[this.props.index].phone = event.target[2].value;\r\n    dat[this.props.index].email = event.target[3].value;\r\n    dat[this.props.index].desc = event.target[5].value;\r\n    dat[this.props.index].picture.large = event.target[4].value;\r\n    localStorage.setItem('items', JSON.stringify(dat));}\r\n\r\n  render() {\r\n    // Button only appears if there is a contact to edit.\r\n    if (typeof this.props.items[this.props.index] !== 'undefined') {\r\n      return (\r\n        <>\r\n      <Button variant=\"primary\" onClick={this.handleShow}>\r\n        Edit\r\n      </Button>\r\n\r\n      <Modal show={this.state.show} onHide={this.handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Contact</Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={this.handleSaveEdit}>\r\n          <Modal.Body>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"AddFirstName\" >First Name</label>\r\n            <input type=\"text\" className=\"form-control\"  defaultValue={this.props.items[this.props.index].name.first} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"AddLastName\">Last Name</label>\r\n            <input type=\"text\" className=\"form-control\" defaultValue={this.props.items[this.props.index].name.last} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"AddPhone\">Phone Number</label>\r\n            <input type=\"tel\" className=\"form-control\"  defaultValue={this.props.items[this.props.index].phone}/>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"AddEmail\">Email</label>\r\n            <input type=\"email\" className=\"form-control\" defaultValue={this.props.items[this.props.index].email} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"AddPicture\">Image URL</label>\r\n            <input type=\"url\" className=\"form-control\" defaultValue={this.props.items[this.props.index].picture.large}/>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"AddDesc\">Description</label>\r\n          <textarea className=\"form-control\" defaultValue={this.props.items[this.props.index].desc}/>\r\n          </div>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleClose}>\r\n            Close\r\n          </Button>\r\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Save\" variant=\"primary\" />\r\n        </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\nexport default ContactEdit;\r\n","import React from 'react';\r\n\r\n// Picture display needed its own component.\r\n// Really should be a pure function.\r\n// Was made a class based component for consistent design.\r\nclass ContactPagePicture extends React.Component {\r\n  render() {\r\n    if (this.props.picture) {\r\n      return <img style={{'maxHeight': '20vh'}} src={this.props.picture} alt={\"Portrait\"} />\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ContactPagePicture;\r\n","import React from 'react';\r\nimport './Contacts.css';\r\nimport ContactDelete from './ContactDelete';\r\nimport ContactEdit from './ContactEdit';\r\nimport ContactPagePicture from './ContactPagePicture';\r\nimport '../bootstrap.css'\r\nimport './ContactAdd.css';\r\n\r\n// Gets markdown going for the description field.\r\nconst ReactMarkdown = require('react-markdown')\r\n\r\n// Component for displaying single contact information on the right side of the app.\r\nclass Cpage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      index: this.props.index,\r\n      items: this.props.items,\r\n    };\r\n  }\r\n\r\n  // Component looks to receive new props. Previously would not always show currently selected contact.\r\n  static getDerivedStateFromProps(newProps, oldState) {\r\n    if (newProps.index === oldState.index && newProps.items === oldState.items) {\r\n      return null;\r\n    }\r\n    return {\r\n      index: newProps.index,\r\n      items: newProps.items,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.items) {\r\n      return (\r\n    <div >\r\n      <div className=\"ContactPageContact\">\r\n        <div className=\"container responsive\" style={{height: '20vh', 'paddingTop': '3vh'}}><ContactPagePicture picture={this.props.picture} /></div>\r\n        <h2 className=\"ContactPageName\">{this.props.name}</h2>\r\n        <h2 className=\"ContactPagePhone\">{this.props.phone}</h2>\r\n        <h2 className=\"ContactPageEmail\">{this.props.email}</h2>\r\n        <br />\r\n        <ReactMarkdown className=\"ContactPageDescription\" source={this.props.desc} />\r\n      </div>\r\n      <b style={{display: 'flex', 'height': '9vh'}}>\r\n          <ContactEdit items={this.state.items} index={this.state.index} />\r\n          <ContactDelete items={this.state.items} index={this.state.index}/>\r\n      </b>\r\n    </div>\r\n);\r\n} else {\r\n  return (\r\n    <div >\r\n      <div className=\"ContactPageContact\">\r\n        <div className=\"container responsive\" style={{height: '20vh', 'paddingTop': '3vh'}} />\r\n        <h2 className=\"ContactPageName\">Add contacts to begin</h2>\r\n        <h2 className=\"ContactPagePhone\"> </h2>\r\n        <h2 className=\"ContactPageEmail\"> </h2>\r\n        <br />\r\n        <ReactMarkdown className=\"ContactPageDescription\" />\r\n      </div>\r\n    </div>\r\n)\r\n}\r\n}\r\n}\r\n\r\nexport default Cpage;\r\n","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport '../bootstrap.css';\r\nimport './ContactAdd.css';\r\n\r\n\r\n// Component for the Add Contact button and modal.\r\nclass ContactAdd extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { show: false }\r\n  }\r\n\r\ncomponentDidMount() {\r\n  // If there is no contacts array, or if the array is empty, starts the app with the modal open.\r\nif (localStorage.getItem('items') === '[]' || localStorage.getItem('items') === null) {\r\n      this.setState({\r\n        show: true,\r\n      });\r\n}\r\n}\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      show: false\r\n    })\r\n  }\r\n\r\n  handleShow = () => {\r\n    this.setState({\r\n      show: true\r\n    })\r\n  }\r\n\r\n  handleSave = (event) => {\r\n    const dat = JSON.parse(localStorage.getItem('items'));\r\n    dat.push({\r\n      name: {\r\n        first: event.target[0].value,\r\n        last: event.target[1].value},\r\n      phone: event.target[2].value,\r\n      email: event.target[3].value,\r\n      desc: event.target[5].value,\r\n      picture: {\r\n        large: event.target[4].value,\r\n      }\r\n    });\r\n    localStorage.setItem('items', JSON.stringify(dat))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <>\r\n      <p style={{width: '29.5vw', 'justifySelf': 'center', 'paddingBottom': '10px'}}>\r\n<Button variant=\"info\" className=\"ContactAdd\" onClick={this.handleShow}>\r\n        Add Contact\r\n</Button>\r\n</p>\r\n\r\n      <Modal show={this.state.show} onHide={this.handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Contact</Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={this.handleSave}>\r\n          <Modal.Body>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"AddFirstName\">First Name</label>\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"John\"/>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"AddLastName\">Last Name</label>\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Doe\"/>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"AddPhone\">Phone Number</label>\r\n            <input type=\"tel\" className=\"form-control\" placeholder=\"(555)-555-5555\"/>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"AddEmail\">Email</label>\r\n            <input type=\"email\" className=\"form-control\" placeholder=\"john.doe@gmail.com\"/>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"AddPicture\">Image URL</label>\r\n            <input type=\"url\" className=\"form-control\" placeholder=\"https://website.com/image.jpg\"/>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"AddDesc\">Description</label>\r\n          <textarea className=\"form-control\" placeholder=\"He's a pretty good fella!\"/>\r\n          </div>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleClose}>\r\n            Close\r\n          </Button>\r\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Save\" variant=\"primary\" />\r\n        </Modal.Footer>\r\n        </form>\r\n    </Modal>\r\n    </>\r\n    );\r\n}\r\n}\r\n\r\nexport default ContactAdd;\r\n","import React from 'react';\r\nimport ContactAdd from './ContactAdd';\r\nimport '../bootstrap.css';\r\n\r\n// Component for displaying list of contacts on the left side of the app.\r\nclass RandomUser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { error, isLoaded, items } = this.props;\r\n    if (error) {\r\n      return (\r\n        <div>\r\n      Error: {error.message}\r\n      </div>\r\n      );\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else if (items === null) {\r\n      return <ContactAdd />\r\n    } else {\r\n      return (\r\n        <div>\r\n          {items.map((item, index) => (\r\n            <div  key={index} id={index} className=\"ContactInfo\" onClick={this.props.click}>\r\n              <ul>\r\n              <li className=\"ContactName\">{item.name.first} {item.name.last} </li>\r\n              <li className=\"ContactPhone\">{item.phone}</li>\r\n              <li className=\"ContactEmail\">{item.email}</li>\r\n              </ul>\r\n            </div>)\r\n          )}\r\n          <ContactAdd />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default RandomUser;\r\n","import React, { Component } from 'react';\nimport './bootstrap.css';\nimport './App.css';\nimport ContactPage from './Contacts/ContactPage';\nimport RandomUser from './Contacts/RandomUser';\n\n// The Main App Component\nclass App extends Component {\n\n// State contains contact info as well as the array of contacts\n// taken from localStorage.\n\n  state = {\n    name: 'Add contacts to begin',\n    phone: '',\n    email: '',\n    desc: '',\n    items: JSON.parse(localStorage.getItem('items')),\n    index: 0,\n  }\n\n  componentDidMount() {\n    // Initializes contacts array if none is found\n    if (localStorage.getItem('items') === null) {\n      localStorage.setItem('items', '[]')\n    }\n\n    // Initiliazes single contact for contact page if one exists.\n    if (this.state.items !== null && typeof this.state.items[0] != 'undefined') {\n      this.setState({\n        name: `${this.state.items[0].name.first} ${this.state.items[0].name.last}`,\n        phone: this.state.items[0].phone,\n        email: this.state.items[0].email,\n        desc: this.state.items[0].desc,\n        picture: this.state.items[0].picture.large,\n      });\n    }\n\n    // Gets array of random users from the randomuser API.\n    // This is mostly to demonstrate ability of app to do so if client needs it.\n    // Will be removed in full production.\n    fetch('https://randomuser.me/api/?results=25')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            results: result.results\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n    // The \"demo\" mode toggle that adds the randomly generated contacts to the existing ones.\n    // Currently, requries a refresh to update the app. Looking for a fix.\n    document.addEventListener('keydown', this.handleFetch);\n  }\n\n  // The actual keydown handler.\n  // Press escape and refresh the page to see changes.\n  handleFetch = (event) => {\n    if (event.key === 'Escape' && this.state.isLoaded === true) {\n      const dat = JSON.parse(localStorage.getItem('items'));\n      const newDat = dat.concat(this.state.results);\n      localStorage.setItem('items', JSON.stringify(newDat));\n      this.setState({\n        items: JSON.parse(localStorage.getItem('items')),\n      })\n    }\n}\n\n  // Handler for clicking on a contact on the left. Sets the info for the contact page.\n  clickHandler = (event) => {\n    if (this.state.items[event.currentTarget.attributes.id.value].picture) {\n      this.setState({\n        picture: this.state.items[event.currentTarget.attributes.id.value].picture.large,\n      });\n    }\n    this.setState({\n      name: `${this.state.items[event.currentTarget.attributes.id.value].name.first} ${this.state.items[event.currentTarget.attributes.id.value].name.last}`,\n      phone: this.state.items[event.currentTarget.attributes.id.value].phone,\n      email: this.state.items[event.currentTarget.attributes.id.value].email,\n      desc: this.state.items[event.currentTarget.attributes.id.value].desc,\n      index: event.currentTarget.attributes.id.value,\n    })\n  }\n\n\n\n  render() {\n  return (\n    <div className=\"App\">\n\n      <header className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n          <strong className=\"navbar-brand\">Contacts 'R' Us</strong>\n      </header>\n      <div className=\"wrapper\">\n        <div className=\"Contact\">\n          <RandomUser\n            error={this.state.error}\n            isLoaded={this.state.isLoaded}\n            items={this.state.items}\n            click={this.clickHandler}\n          />\n        </div>\n\n        <div>\n          <ContactPage\n          className=\"ContactPage\"\n            picture={this.state.picture}\n            name={this.state.name}\n            phone={this.state.phone}\n            email={this.state.email}\n            desc={this.state.desc}\n            items={this.state.items}\n            index={this.state.index}\n          />\n        </div>\n      </div>\n\n    </div>\n    );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}